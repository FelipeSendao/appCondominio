/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.MoradorController;
import java.awt.GridLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.Morador;

/**
 *
 * @author Administrador
 */
public class EdicaoView extends javax.swing.JFrame {
    
    private JTextField cpfBuscaField = new JTextField(15);
    private JTextField nomeField = new JTextField(20);
    private JTextField idadeField = new JTextField(5);
    private JTextField rgField = new JTextField(15);

    private JButton buscarBtn = new JButton("Buscar");
    private JButton salvarBtn = new JButton("Salvar Alterações");
    private JButton removerBtn = new JButton("Remover Morador");

    private MoradorController controller = new MoradorController();

    /**
     * Creates new form EdicaoView
     */
    public EdicaoView() {

        super("Editar / Remover Morador");
        setLayout(new GridLayout(6, 2, 10, 10));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setSize(400, 300);
        setLocationRelativeTo(null);

        add(new JLabel("CPF do Morador:"));
        add(cpfBuscaField);

        add(new JLabel(""));
        add(buscarBtn);

        add(new JLabel("Nome:"));
        add(nomeField);

        add(new JLabel("Idade:"));
        add(idadeField);

        add(new JLabel("RG:"));
        add(rgField);

        add(salvarBtn);
        add(removerBtn);

        // Campos desativados até buscar
        setCamposEditaveis(false);

        // Eventos
        buscarBtn.addActionListener(e -> buscarMorador());
        salvarBtn.addActionListener(e -> salvarAlteracoes());
        removerBtn.addActionListener(e -> removerMorador());

        setVisible(true);
        initComponents();
    }
    
    private void setCamposEditaveis(boolean ativo) {
        nomeField.setEnabled(ativo);
        idadeField.setEnabled(ativo);
        rgField.setEnabled(ativo);
        salvarBtn.setEnabled(ativo);
        removerBtn.setEnabled(ativo);
    }

    private void buscarMorador() {
        String cpf = cpfBuscaField.getText().trim();
        if (cpf.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite o CPF para buscar.");
            return;
        }

        Morador m = controller.buscarPorCpf(cpf);
        if (m == null) {
            JOptionPane.showMessageDialog(this, "Morador não encontrado.");
            setCamposEditaveis(false);
            limparCampos();
            return;
        }

        nomeField.setText(m.getNome());
        idadeField.setText(String.valueOf(m.getIdade()));
        rgField.setText(m.getRg());

        setCamposEditaveis(true);
    }

    private void salvarAlteracoes() {
        try {
            String nome = nomeField.getText().trim();
            int idade = Integer.parseInt(idadeField.getText().trim());
            String rg = rgField.getText().trim();
            String cpf = cpfBuscaField.getText().trim();

            if (nome.isEmpty() || rg.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nome e RG não podem estar vazios.");
                return;
            }

            Morador atualizado = new Morador(nome, idade, rg, cpf);
            controller.atualizarMorador(atualizado);

            JOptionPane.showMessageDialog(this, "Morador atualizado com sucesso.");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Idade inválida.");
        }
    }

    private void removerMorador() {
        String cpf = cpfBuscaField.getText().trim();
        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Tem certeza que deseja remover este morador?",
                "Confirmação",
                JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            controller.removerMorador(cpf);
            JOptionPane.showMessageDialog(this, "Morador removido com sucesso.");
            limparCampos();
            setCamposEditaveis(false);
        }
    }

    private void limparCampos() {
        nomeField.setText("");
        idadeField.setText("");
        rgField.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EdicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EdicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EdicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EdicaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EdicaoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
