/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.MoradorController;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import model.Morador;

/**
 *
 * @author Administrador
 */
public class MainView extends javax.swing.JFrame {
    
    private JTextField nomeField = new JTextField(20);
    private JTextField idadeField = new JTextField(5);
    private JTextField rgField = new JTextField(15);
    private JTextField cpfField = new JTextField(15);

    private JTextArea outputArea = new JTextArea(10, 40);

    private JButton cadastrarBtn = new JButton("Cadastrar");
    private JButton listarBtn = new JButton("Listar Moradores");

    private MoradorController controller = new MoradorController();

    /**
     * Creates new form MainView
     */
    public MainView() {
        super("Cadastro de Moradores");

        setLayout(new BorderLayout());
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setSize(500, 400);
        setLocationRelativeTo(null);

        // Painel de entrada
        JPanel formPanel = new JPanel(new GridLayout(5, 2, 10, 10));
        formPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        formPanel.add(new JLabel("Nome:"));
        formPanel.add(nomeField);

        formPanel.add(new JLabel("Idade:"));
        formPanel.add(idadeField);

        formPanel.add(new JLabel("RG:"));
        formPanel.add(rgField);

        formPanel.add(new JLabel("CPF:"));
        formPanel.add(cpfField);

        formPanel.add(cadastrarBtn);
        formPanel.add(listarBtn);

        // Área de saída
        outputArea.setEditable(false);
        JScrollPane scroll = new JScrollPane(outputArea);

        add(formPanel, BorderLayout.NORTH);
        add(scroll, BorderLayout.CENTER);

        // Eventos
        cadastrarBtn.addActionListener(e -> cadastrarMorador());
        listarBtn.addActionListener(e -> listarMoradores());

        setVisible(true);
        initComponents();
    }
    
    private void cadastrarMorador() {
        try {
            String nome = nomeField.getText().trim();
            int idade = Integer.parseInt(idadeField.getText().trim());
            String rg = rgField.getText().trim();
            String cpf = cpfField.getText().trim();

            if (nome.isEmpty() || rg.isEmpty() || cpf.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Todos os campos são obrigatórios.");
                return;
            }

            controller.adicionarMorador(nome, idade, rg, cpf);
            JOptionPane.showMessageDialog(this, "Morador cadastrado com sucesso!");

            limparCampos();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Idade inválida.");
        }
    }

    private void listarMoradores() {
        List<Morador> lista = controller.listarOrdenadoPorNome();
        outputArea.setText("");

        if (lista.isEmpty()) {
            outputArea.setText("Nenhum morador cadastrado.");
        } else {
            for (Morador m : lista) {
                outputArea.append("Nome: " + m.getNome() + " | CPF: " + m.getCpf() + "\n");
            }
        }
    }

    private void limparCampos() {
        nomeField.setText("");
        idadeField.setText("");
        rgField.setText("");
        cpfField.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
